// ===== 【世界隐藏任务】【神之力】：工具函数 ================================ 


// 卸下身上已装备的其他【神之力】的修炼装备（非武器）:
//   除武器外，所有神装互不兼容（主要是会导致重复触发计数）
//============================================================ 
// - param: @keep_equipment_slot 正在装备的槽位（需要保留）
// - return: 空
function	script	f_un_god_equipments	{
	@keep_equipment_slot = getarg(0);

	if (@keep_equipment_slot != EQI_HAND_R) {
		@keep_equip_id = getequipid(@keep_equipment_slot);
		
		if (@keep_equipment_slot != EQI_HEAD_TOP && getequipid(EQI_HEAD_TOP) == 62211) { unequip(EQI_HEAD_TOP); }
		if (@keep_equipment_slot != EQI_HEAD_MID && getequipid(EQI_HEAD_MID) == 62295) { unequip(EQI_HEAD_MID); }
		if (@keep_equipment_slot != EQI_HEAD_LOW && getequipid(EQI_HEAD_LOW) == 62270) { unequip(EQI_HEAD_LOW); }
		if (@keep_equipment_slot != EQI_ARMOR && (getequipid(EQI_ARMOR) == 62301 || getequipid(EQI_ARMOR) == 62328)) { unequip(EQI_ARMOR); }
		if (@keep_equipment_slot != EQI_HAND_L && (getequipid(EQI_HAND_L) == 62101 || getequipid(EQI_HAND_L) == 63333)) { unequip(EQI_HAND_L); }
		if (@keep_equipment_slot != EQI_GARMENT && getequipid(EQI_GARMENT) == 62501) { unequip(EQI_GARMENT); }
		if (@keep_equipment_slot != EQI_SHOES && getequipid(EQI_SHOES) == 62401) { unequip(EQI_SHOES); }
		if (@keep_equipment_slot != EQI_ACC_R && getequipid(EQI_ACC_R) == 62612) { unequip(EQI_ACC_R); }
		if (@keep_equipment_slot != EQI_ACC_L && getequipid(EQI_ACC_L) == 62627) { unequip(EQI_ACC_L); }

		equip(@keep_equip_id);	// 处理循环触发卸载的问题
	}
	return;
}


// 卸下身上所有【神之力】的修炼装备
//============================================================ 
// - param: 无参数
// - return: 空
function	script	f_un_all_god_equipments	{
	if (getequipid(EQI_HEAD_TOP) == 62211) { unequip(EQI_HEAD_TOP); }
	if (getequipid(EQI_HEAD_MID) == 62295) { unequip(EQI_HEAD_MID); }
	if (getequipid(EQI_HEAD_LOW) == 62270) { unequip(EQI_HEAD_LOW); }
	if (getequipid(EQI_ARMOR) == 62301 || getequipid(EQI_ARMOR) == 62328) { unequip(EQI_ARMOR); }
	if (getequipid(EQI_HAND_L) == 62101 || getequipid(EQI_HAND_L) == 63333) { unequip(EQI_HAND_L); }
	if (getequipid(EQI_GARMENT) == 62501) { unequip(EQI_GARMENT); }
	if (getequipid(EQI_SHOES) == 62401) { unequip(EQI_SHOES); }
	if (getequipid(EQI_ACC_R) == 62612) { unequip(EQI_ACC_R); }
	if (getequipid(EQI_ACC_L) == 62627) { unequip(EQI_ACC_L); }
	if (getequipid(EQI_HAND_R) == 61201 || 
		getequipid(EQI_HAND_R) == 62222 || 
		getequipid(EQI_HAND_R) == 61202 || 
		getequipid(EQI_HAND_R) == 61550 || 
		getequipid(EQI_HAND_R) == 67595 || 
		getequipid(EQI_HAND_R) == 61545 || 
		getequipid(EQI_HAND_R) == 61749 || 
		getequipid(EQI_HAND_R) == 61736) { 
		unequip(EQI_HAND_R); 
	}
	return;
}


// 重置所有城市的游历标记
//============================================================ 
// - param: 无参数
// - return: 空
function	script	f_reset_city_checkpoints	{
	@CITY_NUM = 36;
	for (@i = 0; @i <= @CITY_NUM; @i++) {
		if (@i != 15 && @i != 16) {			// 这两个地点只有 GM 可以用命令传送过去
			#CITY_CHECKPOINTS[@i] = false;		
		}
	}
	return;
}


// 标记已游历的城市
//============================================================ 
// - param: 无参数
// - return: 空
function	script	f_mark_city_checkpoint	{
	@map_name$ = callfunc("F_MAP_NAME");

	if (@map_name$ == "prontera") {
		#CITY_CHECKPOINTS[0] = true;

	} else if (@map_name$ == "morocc") {
		#CITY_CHECKPOINTS[1] = true;

	} else if (@map_name$ == "geffen") {
		#CITY_CHECKPOINTS[2] = true;

	} else if (@map_name$ == "payon") {
		#CITY_CHECKPOINTS[3] = true;

	} else if (@map_name$ == "alberta") {
		#CITY_CHECKPOINTS[4] = true;

	} else if (@map_name$ == "izlude") {
		#CITY_CHECKPOINTS[5] = true;

	} else if (@map_name$ == "aldebaran") {
		#CITY_CHECKPOINTS[6] = true;

	} else if (@map_name$ == "xmas") {
		#CITY_CHECKPOINTS[7] = true;

	} else if (@map_name$ == "comodo") {
		#CITY_CHECKPOINTS[8] = true;

	} else if (@map_name$ == "yuno") {
		#CITY_CHECKPOINTS[9] = true;

	} else if (@map_name$ == "amatsu") {
		#CITY_CHECKPOINTS[10] = true;

	} else if (@map_name$ == "gonryun") {
		#CITY_CHECKPOINTS[11] = true;

	} else if (@map_name$ == "umbala") {
		#CITY_CHECKPOINTS[12] = true;

	} else if (@map_name$ == "niflheim") {
		#CITY_CHECKPOINTS[13] = true;

	} else if (@map_name$ == "louyang") {
		#CITY_CHECKPOINTS[14] = true;

	} else if (@map_name$ == "jawaii") {
		#CITY_CHECKPOINTS[17] = true;

	} else if (@map_name$ == "ayothaya") {
		#CITY_CHECKPOINTS[18] = true;

	} else if (@map_name$ == "einbroch") {
		#CITY_CHECKPOINTS[19] = true;

	} else if (@map_name$ == "lighthalzen") {
		#CITY_CHECKPOINTS[20] = true;

	} else if (@map_name$ == "einbech") {
		#CITY_CHECKPOINTS[21] = true;

	} else if (@map_name$ == "hugel") {
		#CITY_CHECKPOINTS[22] = true;

	} else if (@map_name$ == "rachel") {
		#CITY_CHECKPOINTS[23] = true;

	} else if (@map_name$ == "veins") {
		#CITY_CHECKPOINTS[24] = true;

	} else if (@map_name$ == "moscovia") {
		#CITY_CHECKPOINTS[25] = true;

	} else if (@map_name$ == "mid_camp") {
		#CITY_CHECKPOINTS[26] = true;

	} else if (@map_name$ == "manuk") {
		#CITY_CHECKPOINTS[27] = true;

	} else if (@map_name$ == "splendide") {
		#CITY_CHECKPOINTS[28] = true;

	} else if (@map_name$ == "brasilis") {
		#CITY_CHECKPOINTS[29] = true;

	} else if (@map_name$ == "dicastes01") {
		#CITY_CHECKPOINTS[30] = true;

	} else if (@map_name$ == "mora") {
		#CITY_CHECKPOINTS[31] = true;

	} else if (@map_name$ == "dewata") {
		#CITY_CHECKPOINTS[32] = true;

	} else if (@map_name$ == "malangdo") {
		#CITY_CHECKPOINTS[33] = true;

	} else if (@map_name$ == "malaya") {
		#CITY_CHECKPOINTS[34] = true;

	} else if (@map_name$ == "eclage") {
		#CITY_CHECKPOINTS[35] = true;

	} else if (@map_name$ == "lasagna") {
		#CITY_CHECKPOINTS[36] = true;
	}
	return;
}


// 打印当前修炼进度
//============================================================ 
// - param: @equipment_slot 【神之力】修炼装备位置
// - param: @cur_cnt 【神之力】当前计数
// - param: @max_cnt 【神之力】最大计数
// - return: 空
function	script	f_show_mission_progress	{
	@equipment_slot = getarg(0);
	@cur_cnt = getarg(1);
	@max_cnt = getarg(2);

	@equip_name$ = getequipname(@equipment_slot);
	@one_tenth = @max_cnt / 10;
	if (@cur_cnt == 1) {
		callfunc("F_VIEW_EFFECT_WHITE_LOW_LIGHT");
		dispbottom("【世界隐藏任务】[" + @equip_name$ + "] 似乎闪烁微弱荧光");

	} else if(@cur_cnt == @one_tenth * 3) {
		callfunc("F_VIEW_EFFECT_BLUE_FLOURESCENT");
		dispbottom("【世界隐藏任务】[" + @equip_name$ + "] 发出暗淡幽光");

	} else if(@cur_cnt == @one_tenth * 6) {
		callfunc("F_VIEW_EFFECT_RED_GLARE");
		dispbottom("【世界隐藏任务】[" + @equip_name$ + "] 爆发出强光");

	} else if(@cur_cnt >= @max_cnt) {
		callfunc("F_VIEW_EFFECT_SHOCK_WAVE");
		dispbottom("【世界隐藏任务】[" + @equip_name$ + "] 已成功磨炼出耀眼黑光");
	}
	return;
}



// 打印【神之力】修炼完成的提示
//============================================================ 
// - param: @buff_desc 【神之力】增益效果描述
// - return: 空
function	script	f_mission_finish	{
	@buff_desc$ = getarg(0);
	@RO_Manual$ = getitemname(50000);

	dispbottom("【世界隐藏任务】修炼成功! 获得神之力 [" + @buff_desc$ + "]");
	dispbottom("【世界隐藏任务】神之力对身体负荷过大，请通过 [" + @RO_Manual$ + "] 按需附加");
	return;
}


// 附加【神之力】
//============================================================ 
// - param: 无参数
// - return: 空
function	script	F_APPEND_GOD_POWERS	{
	if (#GOD_POWER_FLAG != 2) {
		return;
	}

	@NOW = gettimetick(2);
	if (@NOW <= #GOD_POWER_CD_END_TIME) {
		mes "[神之力] 长时间附加会损害经络";
		mes "需冷却 [^0000FF3^000000] 小时才能再次附加";
		dispbottom("【世界隐藏任务】[神之力] 长时间附加会损害经络，需冷却 [3] 小时才能再次附加", 0xFFFF00);
		return;
	}

	@CD_TIME = 3600 * 4;	// CD 时间 3 小时（算上生效开始时间，往后推 4 小时）
	#GOD_POWER_CD_END_TIME = gettimetick(2) + @CD_TIME;

	@god_power_cnt = 0;
	@buff_time = 3600;
	// @disable_when_dead = 1;
	@disable_when_dead = 8;
	
	if (#GOD_POWER_WEIGHT == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF负重上限增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [负重上限增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bAddMaxWeight, MaxWeight; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_IGNORE_DEF == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF无视防御^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [无视防御] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bIgnoreDefMob, 1; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_CAST == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF无念咏唱^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [无念咏唱] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bFixedCast, -10000; bonus bCastrate, -100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_ATK == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF物理攻击增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [物理攻击增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bAtkRate, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_MATK == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF魔法攻击增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [魔法攻击增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bMatkRate, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_ASPD == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF攻击速度增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [攻击速度增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bAspd, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_CRI == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF暴击率增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [暴击率增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bCriticalRate, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_HIT == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF命中率增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [命中率增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bHitRate, 100; bonus bPerfectHitAddRate, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_DEF == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF物理防御增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [物理防御增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bDefRate, 100; bonus bDef2Rate, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_MDEF == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF魔法防御增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [魔法防御增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bMdefRate, 100; bonus bMdef2Rate, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_FLEE == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF回避率增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [回避率增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bFleeRate, 100; bonus bFlee2Rate, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_SPEED == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF移动速度增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [移动速度增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bSpeedAddRate, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_WEAPON_RETURN == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF物理反射^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [物理反射] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bShortWeaponDamageReturn, 100; bonus bLongWeaponDamageReturn, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_MAGIC_RETURN == true) {
		@god_power_cnt++;
		mes("附加 [^0000FF魔法反射^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [魔法反射] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus bMagicDamageReturn, 100; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_HP_RECOV == true) {
		@god_power_cnt++;
		mes("附加 [^0000FFHP 回复增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [HP 回复增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus2 bHPRegenRate, 100, 1000; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}

	if (#GOD_POWER_SP_RECOV == true) {
		@god_power_cnt++;
		mes("附加 [^0000FFSP 回复增益^000000] ^0000FF" + @buff_time + "^000000 秒!");
		dispbottom("【世界隐藏任务】已进入 [SP 回复增益] 状态，持续时间 " + @buff_time + " 秒!", 0xFF8000);
		bonus_script("{ bonus2 bSPRegenRate, 10, 1000; }", @buff_time, @disable_when_dead, 1, SI_BLANK);
	}
	
	if (@god_power_cnt > 0) {
		mes "共附加 [^0000FF" + @god_power_cnt + "^000000] 项 [神之力]";
		dispbottom("【世界隐藏任务】已附加 [" + @god_power_cnt + "] 项 [神之力]", 0xFFFF00);

	} else {
		mes "你没有附加^FF0000神之力^000000的资格！";
		mes "-------------------------------";
		mes "传闻在^FF0000沙漠深处^000000出土了一块^FF0000古老石碑^000000，";
		mes "上面记载了关于^FF0000世界隐藏任务^000000的线索，";
		mes "有幸达成任务的天选之人 ...... ";
		mes "或可获得被神授予^FF0000神之力^000000的资格 ......";
	}
	return;
}