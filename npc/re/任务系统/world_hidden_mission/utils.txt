// ===== 世界隐藏任务 - 神赐体质：工具函数 ================================ 


/*
流程：
1. 找到石碑
2. 石碑根据意向 给与不同类型的装备 （主要因为计数冲突）
3. 最多装备 1 件装备修炼

*/


// 过图，穿上任意装备，都会触发判断，若对应位置没有装备，则会报错，但不影响游戏

// 修炼神赐体质01 - 完全回避
//============================================================ 
// - param: 无参数
// - return: （达成修炼条件后）是否破坏当前装备
function	script	F_TRAIN_GOD_POWER_01	{

	// callfunc("F_CHECK_AND_UNEQUIP_GOD", EQI_HEAD_TOP);
	// 被攻击时计数器 + 1
	// TODO autobonus2 有 BUG, 当多个装备都设置了autobonus2脚本且 同时受到攻击时，计数器会脏读，第一件装备被攻击计数为1，后一件为2
	// TODO 如何判断是什么魔物发起攻击？

	// 一个函数内如果有多个 autobonus2，只会第一个计数生效


	// Todo 关于体质高速移动，可以在迷宫入口设触发点计时，1小时内攻破迷宫深处 BOSS
	return;
}


function	script	F_TRAIN_GOD_POWER_02	{

	callfunc("F_CHECK_AND_UNEQUIP_GOD", EQI_HEAD_TOP);
	autobonus2 "{ #www++;  }",1000,0,BF_NORMAL|BF_SKILL,"{}";

	// 神之套装不能一起修炼，装备时若身上有套装的一部分，会卸下
	// 卸下时 获取的计数 会清零

	// Todo 关于体质高速移动，可以在迷宫入口设触发点计时，1小时内攻破迷宫深处 BOSS
	

	// 绝对防御： VIT*2，限 qs 职业。 持续一小时被攻击，且没有受到伤害，同时也没有赋予伤害。
	// 冥想：每10秒恢复最大HP 1%. 持续不动被攻击3小时
	// 完全回避： flee2 + 1000。 限 ck lr 职业。 持续一小时被攻击，且没有受到伤害，同时也没有赋予伤害。
	// 绝对命中： Hit + 1000 。 装备 hit - 50 不间断地攻击并命中 10000 次

	// "完全回避 ■■■ 绝对命中 ■■■";
	// "■■■ 绝对暴 ■■■ 无限攻击加速";
	// "■■■ 无视距 ■■■ 无咏唱 ■■■";
	// "物理无效 ■■■ 魔法无效 ■■■";
	// "■■■ 物理反射 ■■■ 魔法反射";
	// "高速移动 ■■■ 极速回复 ■■■";
	// "嗜血 ■■■ 吸魔 ■■■ 无偿触媒";
	// "■■ 极限负重 ■  ■■ ■■ ■■";
	// "■■ 火免疫 ■■ 毒无效 ■■";
	return;
}


// 卸下身上已装备的其他神赐体质的修炼装备（非武器）:
//   除武器外，所有神装互不兼容（主要是会导致重复触发计数）
//============================================================ 
// - param: @keep_equipment_slot 正在装备的槽位
// - return: 无参数
function	script	f_un_god_equipments	{
	@keep_equipment_slot = getarg(0);

	if (@keep_equipment_slot != EQI_HAND_R) {
		@keep_equip_id = getequipid(@keep_equipment_slot);
		
		if (@keep_equipment_slot != EQI_HEAD_TOP && getequipid(EQI_HEAD_TOP) == 62211) { unequip(EQI_HEAD_TOP); }
		if (@keep_equipment_slot != EQI_HEAD_MID && getequipid(EQI_HEAD_MID) == 62295) { unequip(EQI_HEAD_MID); }
		if (@keep_equipment_slot != EQI_HEAD_LOW && getequipid(EQI_HEAD_LOW) == 62270) { unequip(EQI_HEAD_LOW); }
		if (@keep_equipment_slot != EQI_ARMOR && (getequipid(EQI_ARMOR) == 62301 || getequipid(EQI_ARMOR) == 62328)) { unequip(EQI_ARMOR); }
		if (@keep_equipment_slot != EQI_HAND_L && getequipid(EQI_HAND_L) == 62101) { unequip(EQI_HAND_L); }
		if (@keep_equipment_slot != EQI_GARMENT && getequipid(EQI_GARMENT) == 62501) { unequip(EQI_GARMENT); }
		if (@keep_equipment_slot != EQI_SHOES && getequipid(EQI_SHOES) == 62401) { unequip(EQI_SHOES); }
		if (@keep_equipment_slot != EQI_ACC_R && getequipid(EQI_ACC_R) == 62612) { unequip(EQI_ACC_R); }
		if (@keep_equipment_slot != EQI_ACC_L && getequipid(EQI_ACC_L) == 62627) { unequip(EQI_ACC_L); }

		equip(@keep_equip_id);	// 处理循环触发卸载的问题
	}
	return;
}

/*
62211,Ancient_Bandana,古老的 破裂的王冠,4,1,,50,,10,,0,0xFFFFFFFF,63,2,256,,0,1,6,{ callfunc("F_ATTACKED_COUNT_HEAD_TOP"); },{ callfunc("f_start_count_by_oneqi",EQI_HEAD_TOP); },{ callfunc("f_clear_count_by_uneqi",EQI_HEAD_TOP); }
62295,Ancient_Blinker,古老的 支离破碎的布片,4,1,,50,,0,,0,0xFFFFFFFF,63,2,512,,0,0,82,{ callfunc("F_ATTACKED_COUNT_HEAD_MID"); },{ callfunc("f_start_count_by_oneqi",EQI_HEAD_MID); },{ callfunc("f_clear_count_by_uneqi",EQI_HEAD_MID); }
62270,Ancient_Leaf,古老的 断针,4,1,,50,,0,,0,0xFFFFFFFF,63,2,1,,0,0,57,{ callfunc("F_ATTACKED_COUNT_HEAD_LOW"); },{ callfunc("f_start_count_by_oneqi",EQI_HEAD_LOW); },{ callfunc("f_clear_count_by_uneqi",EQI_HEAD_LOW); }
62301,Ancient_Shirt,古老的 破烂烂的衣服,4,1,,50,,10,,0,0xFFFFFFFF,63,2,16,,0,1,0,{ callfunc("F_ATTACKED_COUNT_ARMOR"); },{ callfunc("f_start_count_by_oneqi",EQI_ARMOR); },{ callfunc("f_clear_count_by_uneqi",EQI_ARMOR); }
62328,Ancient_Mail,古老的 破裂的铠甲一角,4,1,,50,,10,,0,0xFFFFFFFF,63,2,16,,0,1,0,{ callfunc "F_ATTACKED_COUNT_ARMOR"; },{ callfunc("f_start_count_by_oneqi",EQI_ARMOR); },{ callfunc("f_clear_count_by_uneqi",EQI_ARMOR); }
61201,Ancient_Knife,古老的 破裂的剑,5,1,,50,20,,1,0,0xFFFFFFFF,63,2,2,1,1,1,1,{ callfunc("F_ATTACK_COUNT_HAND_R"); },{ callfunc("f_start_count_by_oneqi",EQI_HAND_R); },{ callfunc("f_clear_count_by_uneqi",EQI_HAND_R); }
61202,Ancient_Shuriken,古老的 破旧之手里剑,5,1,,50,20,,1,0,0xFFFFFFFF,63,2,2,1,1,1,1,{ callfunc("F_ATTACK_COUNT_HAND_R"); },{ callfunc("f_start_count_by_oneqi",EQI_HAND_R); },{ callfunc("f_clear_count_by_uneqi",EQI_HAND_R); }
61550,Ancient_Book,古老的 撕裂的魔法书,5,1,,50,20,,1,0,0xFFFFFFFF,63,2,2,1,1,1,15,{ callfunc("F_ATTACK_COUNT_HAND_R"); },{ callfunc("f_start_count_by_oneqi",EQI_HAND_R); },{ callfunc("f_clear_count_by_uneqi",EQI_HAND_R); }
63104,Ancient_Garrison,古老的 残破的枪械残骸,5,1,,50,20,,7,0,0xFFFFFFFF,63,2,34,1,1,1,17,{ callfunc("F_ATTACK_COUNT_HAND_R"); },{ callfunc("f_start_count_by_oneqi",EQI_HAND_R); },{ callfunc("f_clear_count_by_uneqi",EQI_HAND_R); }
61545,Ancient_N_Mace,古老的 新手锤,5,0,,0,57,,1,3,0xFFFFFFFF,63,2,2,1,2,0,8,{ callfunc("F_ATTACK_COUNT_HAND_R"); },{ callfunc("f_start_count_by_oneqi",EQI_HAND_R); },{ callfunc("f_clear_count_by_uneqi",EQI_HAND_R); }
61749,Ancient_Tourist_Bow,古老的 旅行者之弓,5,0,,50,40,,5,0,0xFFFFFFFF,63,2,34,1,1,0,11,{ callfunc("F_ATTACK_COUNT_HAND_R"); },{ callfunc("f_start_count_by_oneqi",EQI_HAND_R); },{ callfunc("f_clear_count_by_uneqi",EQI_HAND_R); }
62101,Ancient_Guard,古老的 破裂的硬壳,4,1,,50,,10,,0,0xFFFFFFFF,63,2,32,,0,1,1,{ callfunc("F_ATTACKED_COUNT_HAND_L"); },{ callfunc("f_start_count_by_oneqi",EQI_HAND_L); },{ callfunc("f_clear_count_by_uneqi",EQI_HAND_L); }
62501,Ancient_Hood,古老的 破旧的围巾,4,1,,50,,10,,0,0xFFFFFFFF,63,2,4,,0,1,0,{ callfunc("F_ATTACKED_COUNT_GARMENT"); },{ callfunc("f_start_count_by_oneqi",EQI_GARMENT); },{ callfunc("f_clear_count_by_uneqi",EQI_GARMENT); }
62401,Ancient_Sandals,古老的 被盗的凉鞋,4,1,,50,,10,,0,0xFFFFFFFF,63,2,64,,0,1,0,{ callfunc("F_ATTACKED_COUNT_SHOES"); },{ callfunc("f_start_count_by_oneqi",EQI_SHOES); },{ callfunc("f_clear_count_by_uneqi",EQI_SHOES); }
62612,Ancient_Flower_Ring,古老的 破损的魔法石,4,1,,50,,0,,0,0xFFFFFFFF,63,2,8,,0,0,0,{ callfunc("F_ATTACKED_COUNT_ACC_R"); },{ callfunc("f_start_count_by_oneqi",EQI_ACC_R); },{ callfunc("f_clear_count_by_uneqi",EQI_ACC_R); }
62627,Ancient_Belt,古老的 破坏的令牌,4,1,,50,,0,,0,0xFFFFFFFF,63,2,128,,1,0,0,{ callfunc("F_ATTACKED_COUNT_ACC_R"); },{ callfunc("f_start_count_by_oneqi",EQI_ACC_L); },{ callfunc("f_clear_count_by_uneqi",EQI_ACC_L); }
*/

//   - EQI_ACC_L (0)             - Accessory 1
//   - EQI_ACC_R (1)             - Accessory 2
//   - EQI_SHOES (2)             - Footgear (shoes, boots)
//   - EQI_GARMENT (3)           - Garment (mufflers, hoods, manteaux)
//   - EQI_HEAD_LOW (4)          - Lower Headgear (beards, some masks)
//   - EQI_HEAD_MID (5)          - Middle Headgear (masks, glasses)
//   - EQI_HEAD_TOP (6)          - Upper Headgear
//   - EQI_ARMOR (7)             - Armor (jackets, robes)
//   - EQI_HAND_L (8)            - Left hand (weapons, shields)
//   - EQI_HAND_R (9)            - Right hand (weapons)