// ===== 【世界隐藏任务】【神之力】：修炼条件检查器 ================================ 


function	script	F_CHECK_HEAD_TOP	{
	@equip_id = getequipid(EQI_HEAD_TOP);

	// 古老的 破裂的王冠
	if (@equip_id == 62211) {
		callfunc("f_check_weight");
	}
	return;
}


function	script	F_CHECK_HEAD_MID	{
	@equip_id = getequipid(EQI_HEAD_MID);

	// 古老的 支离破碎的布片
	if (@equip_id == 62295) {
		callfunc("f_check_atkrange");
	}
	return;
}


function	script	F_CHECK_HEAD_LOW	{
	@equip_id = getequipid(EQI_HEAD_LOW);

	// 古老的 断针
	if (@equip_id == 62270) {
		callfunc("f_check_cast");
	}
	return;
}


function	script	F_CHECK_ARMOR	{
	@equip_id = getequipid(EQI_ARMOR);

	// 古老的 破烂烂的衣服
	if (@equip_id == 62301) {
		callfunc("f_check_mdef");

	// 古老的 破裂的铠甲一角
	} else if (@equip_id == 62328) {
		callfunc("f_check_def");
	}
	return;
}


// 【神之力】修炼检查: EQI_HAND_R 右手（武器）
//============================================================ 
// - param: 无参数
// - return: 
function	script	F_CHECK_HAND_R	{
	@equip_id = getequipid(EQI_HAND_R);

	// 古老的 破裂的剑
	if (@equip_id == 61201) {
		callfunc("f_check_atk");

	// 古老的 特别的剑
	} else if (@equip_id == 62222) {
		callfunc("f_check_aspd");

	// 古老的 破旧之手里剑
	} else if (@equip_id == 61202) {
		callfunc("f_check_cri");

	// 古老的 撕裂的魔法书
	} else if (@equip_id == 61550) {
		callfunc("f_check_matk");

	// 古老的 新手锤
	} else if (@equip_id == 61545) {
		callfunc("f_check_atk");

	// 古老的 旅行者之弓
	} else if (@equip_id == 61749) {
		callfunc("f_check_hit");

	// 古老的 连发弓
	} else if (@equip_id == 61736) {
		callfunc("f_check_aspd");
	}
	return;
}


function	script	F_CHECK_HAND_L	{
	@equip_id = getequipid(EQI_HAND_L);

	// 古老的 破裂的硬壳
	if (@equip_id == 62101) {
		callfunc("f_check_hp_recov");

	// 古老的 特别的盾牌
	} else if (@equip_id == 63333) {
		callfunc("f_check_sp_recov");
	}
	return;
}


function	script	F_CHECK_GARMENT	{
	@equip_id = getequipid(EQI_GARMENT);

	// 古老的 破旧的围巾
	if (@equip_id == 62501) {
		callfunc("f_check_flee");
	}
	return;
}


function	script	F_CHECK_SHOES	{
	@equip_id = getequipid(EQI_SHOES);

	// 古老的 被盗的凉鞋
	if (@equip_id == 62401) {
		callfunc("f_check_speed");
	}
	return;
}


function	script	F_CHECK_ACC_R	{
	@equip_id = getequipid(EQI_ACC_R);

	// 古老的 破损的魔法石
	if (@equip_id == 62612) {
		callfunc("f_check_sp_limit");
	}
	return;
}


function	script	F_CHECK_ACC_L	{
	@equip_id = getequipid(EQI_ACC_L);

	// 古老的 破坏的令牌
	if (@equip_id == 62627) {
		callfunc("f_check_hp_limit");
	}
	return;
}



/*************************************************************************/


function	script	f_check_weight	{
	dispbottom "f_check_weight";
	callfunc("f_weight");
	return;
}


function	script	f_check_atkrange	{
	dispbottom "f_check_atkrange";
	return;
}


function	script	f_check_cast	{
	dispbottom "f_check_cast";
	return;
}


function	script	f_check_atk	{
	dispbottom "f_check_atk";
	return;
}


function	script	f_check_matk	{
	dispbottom "f_check_atk";
	return;
}


function	script	f_check_aspd	{
	dispbottom "f_check_aspd";

	// 检查 ASPD
	@LIMIT_ASPD = 10000;
	if (#AC_HAND_R >= @LIMIT_ASPD) {
		dispbottom "【世界隐藏任务】达成修炼条件！获得【神之力】： ASPD 199";
		delitem @equip_id, 1;

		// 获得道具 getitem
		// 获得效果	bonus_script "{ bonus bFlee,999; bonus bFlee2,999; }",5,512,0,SC_INCFLEE2;
		// 获得效果展示	skilleffect "HP_ASSUMPTIO",0;
	}
	return;
}


function	script	f_check_cri	{
	dispbottom "f_check_cri";
	return;
}


function	script	f_check_hit	{
	dispbottom "f_check_hit";
	return;
}


function	script	f_check_def	{
	dispbottom "f_check_def";
	return;
}


function	script	f_check_mdef	{
	dispbottom "f_check_mdef";
	return;
}


function	script	f_check_flee	{
	dispbottom "f_check_flee";
	return;
}


function	script	f_check_speed	{
	dispbottom "f_check_speed";
	return;
}

function	script	f_check_hp_recov	{
	dispbottom "f_check_hp_recov";
	return;
}


function	script	f_check_sp_recov	{
	dispbottom "f_check_sp_recov";
	return;
}

function	script	f_check_hp_limit	{
	dispbottom "f_check_hp_limit";
	@is_over = callfunc("f_is_over_weight");
	dispbottom "@is_over=" + @is_over;
	return;
}


function	script	f_check_sp_limit	{
	dispbottom "f_check_sp_limit";
	@is_move = callfunc("f_is_move");
	dispbottom "@is_move=" + @is_move;
	return;
}


/*************************************************************************/


function	script	f_is_move	{
	@position$ = callfunc("F_POSTION");
	@is_move = !(#LAST_POSITION$ == @position$);
	#LAST_POSITION$ = @position$;
	return @is_move;
}


function	script	f_is_over_weight	{
	// 由于系统不支持浮点数除法，只能通过加减法判断是否超过 90%
	@one_tenth = MaxWeight / 10;
	@is_over = (Weight + @one_tenth) >= MaxWeight;
	dispbottom("@one_tenth=" + @one_tenth);
	dispbottom("@is_over=" + @is_over);
	return @is_over;
}
